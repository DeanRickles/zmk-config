#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"

#undef CONFIG_ZMK_MACRO_DEFAULT_WAIT_MS
#define CONFIG_ZMK_MACRO_DEFAULT_WAIT_MS 30

#undef CONFIG_ZMK_MACRO_DEFAULT_TAP_MS
#define CONFIG_ZMK_MACRO_DEFAULT_TAP_MS 40

/* Canadian Multilingual Standard Mappings */

#define SLSH   GRAVE       // /
#define ca     LBKT        // ^
#define gr     RA(LBKT)    // `
#define DEG    RA(SEMI)    // °
#define LBRAC  RA(N7)      // {
#define RBRAC  RA(N8)      // }
#define LBKET  RA(N9)      // [
#define RBKET  RA(N0)      // ]
#define QUEST  LS(N6)      // ?
#define PIP    RA(GRAVE)   // |
#define TILDS  RA(RBKT)    // ~
#define LETHAN RA(COMMA)   // ≤
#define GRTHAN RA(DOT)     // ≥

// The following must return to the base layer after being pressed
ZMK_BEHAVIOR(A_GR,  macro, bindings = <&kp BACKSLASH>, <&to DEF>;)      // À
ZMK_BEHAVIOR(A_CI,  macro, bindings = <&fr_a_cf>,  <&to DEF>;)          // Â
ZMK_BEHAVIOR(E_CU,  macro, bindings = <&kp SLASH>, <&to DEF>;)          // É
ZMK_BEHAVIOR(E_GR,  macro, bindings = <&kp APOS>, <&to DEF>;)           // È
ZMK_BEHAVIOR(E_CI,  macro, bindings = <&fr_e_cf>, <&to DEF>;)           // Ê
ZMK_BEHAVIOR(I_CI,  macro, bindings = <&fr_i_cf>, <&to DEF>;)           // Î
ZMK_BEHAVIOR(O_CI,  macro, bindings = <&fr_o_cf>, <&to DEF>;)           // Ô
ZMK_BEHAVIOR(U_CI,  macro, bindings = <&fr_u_cf>, <&to DEF>;)           // Û
ZMK_BEHAVIOR(U_GR,  macro, bindings = <&fr_u_gr>, <&to DEF>;)           // Ù
ZMK_BEHAVIOR(CEDIL, macro, bindings = <&kp RBKT>, <&to DEF>;)           // Ç

ZMK_BEHAVIOR(CAR,   macro, bindings = // ^ directly
    <&macro_tap &kp LBKT &kp SPACE>,
    <&to DEF>;)

ZMK_BEHAVIOR(TREMA, macro, bindings = // ¨ directly
    <&macro_tap &kp LS(LBKT) &kp SPACE>,
    <&to DEF>;)

ZMK_BEHAVIOR(GRA,  macro, bindings = // ` directly
    <&macro_press &kp RALT>,
    <&macro_tap &kp LBKT &kp LBKT>,
    <&macro_release &kp RALT>,
    <&to DEF>;)

ZMK_BEHAVIOR(AGRA, macro_one_param, bindings = // ` to input
    <&kp RA(LBKT)>,
    <&macro_param_1to1>,
    <&macro_tap &kp MACRO_PLACEHOLDER>,
    <&to DEF>;)

ZMK_BEHAVIOR(AIGU, macro_one_param, bindings =  // ´ to input
    <&kp RA(SLASH)>,
    <&macro_param_1to1>,
    <&macro_tap &kp MACRO_PLACEHOLDER>,
    <&to DEF>;)

ZMK_BEHAVIOR(TREM, macro_one_param, bindings = // ¨ to input
    <&kp LS(LBKT)>,
    <&macro_param_1to1>,
    <&macro_tap &kp MACRO_PLACEHOLDER>,
    <&to DEF>;)

ZMK_BEHAVIOR(CIRC, macro_one_param, bindings = // ^ to input
    <&kp LBKT>,
    <&macro_param_1to1>,
    <&macro_tap &kp MACRO_PLACEHOLDER>,
    <&to DEF>;)
