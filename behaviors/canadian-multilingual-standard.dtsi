#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"

/* Canadian Multilingual Standard Mappings */
ZMK_BEHAVIOR(A_G,   macro, bindings = <&kp BACKSLASH>;)     // À
ZMK_BEHAVIOR(E_C,   macro, bindings = <&kp SLASH>;)         // É
ZMK_BEHAVIOR(E_G,   macro, bindings = <&kp APOS>;)          // È
ZMK_BEHAVIOR(CEDIL, macro, bindings = <&kp RBKT>;)          // Ç
ZMK_BEHAVIOR(CIRC,  macro, bindings = <&kp LBKT>;)          // ^)
ZMK_BEHAVIOR(SLSH,  macro, bindings = <&kp GRAVE>;)          // |)
ZMK_BEHAVIOR(GRA,   macro, bindings = // `
    <&macro_press &kp RALT>,
    <&macro_tap &kp LBKT>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(AIGU,  macro, bindings =  // ´
    <&macro_press &kp RALT>,
    <&macro_tap &kp SLASH>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(TREMA, macro, bindings =
    <&macro_press &kp LSHFT>,
    <&macro_tap &kp LBKT>,
    <&macro_release &kp LSHFT>;)
ZMK_BEHAVIOR(DEG,   macro, bindings = // °
    <&macro_press &kp RALT>,
    <&macro_tap &kp SEMI>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(LBRAC,  macro, bindings = // {
    <&macro_press &kp RALT>,
    <&macro_tap &kp N7>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(RBRAC,  macro, bindings = // }
    <&macro_press &kp RALT>,
    <&macro_tap &kp N8>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(LBKET,  macro, bindings = // [
    <&macro_press &kp RALT>,
    <&macro_tap &kp N9>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(RBKET,  macro, bindings = // ]
    <&macro_press &kp RALT>,
    <&macro_tap &kp N0>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(QUEST,  macro, bindings = // ?
    <&macro_press &kp LSHFT>,
    <&macro_tap &kp N6>,
    <&macro_release &kp LSHFT>;)
ZMK_BEHAVIOR(PIP,  macro, bindings = // |
    <&macro_press &kp RALT>,
    <&macro_tap &kp GRAVE>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(TILDS,  macro, bindings = // 
    <&macro_press &kp RALT>,
    <&macro_tap &kp RBKT>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(LETHAN,  macro, bindings = // <
    <&macro_press &kp RALT>,
    <&macro_tap &kp COMMA>,
    <&macro_release &kp RALT>;)
ZMK_BEHAVIOR(GRTHAN,  macro, bindings = // >
    <&macro_press &kp RALT>,
    <&macro_tap &kp DOT>,
    <&macro_release &kp RALT>;)

